Тема: Типы данных и операции
1. Типы данных.
[]
double 
int
char
bool
short
[]
2. Правила приведения типов данных.
[]
Если lvalue тип (приводящий) может срезать значение у rvalue переменной - стоит быть осторожным. Из соображений безопасности стоит использовать const_cast<> 
[]
3. Модульная структура программы.
[]
Хорошая программа всегда строится модулями, что бы соответствовать единственному код-стайлу, возможности расширения функционала
1 часть - подключение библиотек, заголовков
2 часть - объявления функций
3.1 часть - объявление класса и его методов (файл .h)
3.2 часть - реализация методов класса (файл .cpp)
4 часть - функция main()   
[]
4. Правила формирования и вычисления выражений.
[]
1 (в алгоритмах) - при объявлении переменных, инициализировать их сразу же
2 (в функциях) - обязательно объявить перемененную результата, и вернуть его. Откуда нам знать, рекурсивно ли будет вызываться функция для конечного пользователя
[]
5. Виды выражений.
[]
lvalue 
rvalue
[]
6. Определение и инициализация строк.
[]
Строка в с++ - улучшенная версия с-string. 
[]
7. Функции стандартной библиотеки для обработки символов и строк.
8. Функции преобразования строк и чисел.
9. Операторы new и delete.
10. Основные виды операторов new и delete.
11. Операторы.
12. Классификация операторов.
13. Примеры операторов.
14. Перегрузка операторов.
___________
Тема: Синтаксис и семантика
15. Понятие синтаксиса языка программирования.
16. Понятие семантики языка программирования.
17. Понятие синтаксической ошибки.
18. Понятие семантической ошибки.
___________
Тема: Массивы и структуры данных
19. Массивы и двумерные массивы.
20. Двумерный массив как непрерывный одномерный массив.
21. Двумерный массив как jagged-array.
___________
Тема: Функции и модульность
22. Область видимости имени переменной.
23. Время жизни объекта.
24. Механизм передачи параметров в функцию.
25. Организация функций.
26. Локальные и глобальные переменные.
27. Объявление функции.
28. Определение функции.
29. Вызов функции.
30. Передача параметров функции по значению.
31. Передача параметров функции по адресу.
32. Модульная структура программы.
33. Сборка и компиляция проекта.
34. Возвращаемое значение функции.
35. Прототип функции.
36. Функция.
37. Указатель на функцию.
38. Функтор.
___________
Тема: Указатели и ссылки
39. Указатели.
40. Преобразование типов указателей.41. Оператор определения адреса.
42. Оператор обращения по адресу.
43. Указатели на константы.
44. Константные указатели.
45. Арифметические действия с указателями.
46. Ссылка на объект.
47. Провисшие ссылки.
48. Lvalue-ссылки.
49. Rvalue-ссылки.
___________
Тема: Объектно-ориентированное программирование (ООП)
51. Понятие ООП.
52. Понятие объекта.
53. Инвариант класса.
54. Методы класса.
55. Поля класса.
56. Интерфейс класса.
57. Виды наследования.
58. Инкапсуляция полей и методов.
59. Перегрузка арифметических операторов.
60. Наследование.
61. Виртуализация.
62. Понятие объекта и класса.
63. Методы класса.
64. Конструктор класса.
65. Список инициализации.
66. Виды конструкторов.
67. Правило пяти.
68. Правило нуля.
69. Перегрузка операторов.
70. Неперегружаемые операторы.
71. Синтаксис перегрузки унарных операций.
72. Синтаксис перегрузки бинарных операций.
73. Особенности перегрузки операторов сравнения.
74. Передача аргументов по умолчанию в виртуальные функции.
75. Виртуальные деструкторы.
76. Абстрактные классы.
77. Множественное наследование.
78. Виртуальное наследование.
___________
Тема: Исключения и безопасность
79. Механизм исключений.
80. Перехват исключения.
81. Блок обработки исключения.
82. Использование нескольких блоков обработки исключения.
83. Создание собственных исключений.
84. Понятие объекта-исключения.
85. Способы передачи управления.
86. Гарантии безопасности относительно исключений.
___________
Тема: Алгоритмы и сложность
87. Понятие алгоритма.88. Основные свойства алгоритма: массовость.
89. Основные свойства алгоритма: дискретность.
90. Основные свойства алгоритма: детерминированность.
91. Основные свойства алгоритма: результативность.
92. Основные свойства алгоритма: асимптотическая сложность.
93. Способы записи алгоритма.
