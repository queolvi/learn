#include <string>

int get_age(const std::string& she_said) {
  
  /*
  char old_res = she_said[0];
  int new_res = std::stoi(old_res);
  if (new_res < 0 && new_res > 9) {}
  else {return new_res;} */
  return  she_said[0] - '0';
 
}

Describe(SampleTests)
{
    It(should_pass_sample_tests)
    {
        Assert::That(get_age("5 years old"), Equals(5), ExtraMessage(R"(Invalid result for "5 years old")"));
        Assert::That(get_age("9 years old"), Equals(9), ExtraMessage(R"(Invalid result for "9 years old")"));
        Assert::That(get_age("1 year old"),  Equals(1), ExtraMessage(R"(Invalid result for "1 year old")"));
    }
};




/*### Задача
Маленькая девочка на вопрос "Сколько тебе лет?" всегда отвечает строкой вида "x years old", где x — случайная цифра от 0 до 9. Нужно написать функцию, которая извлекает возраст (цифру x) из этой строки и возвращает его как целое число.

### Проблемы в исходном коде:
1. **Неправильное преобразование**: Код пытается использовать `std::stoi` для символа, но эта функция работает со строками, а не с отдельными символами.
2. **Логическая ошибка в условии**: Проверка `if (new_res < 0 && new_res > 9)` некорректна — число не может быть одновременно меньше 0 и больше 9.
3. **Избыточная проверка**: По условию задачи первый символ строки всегда цифра, поэтому дополнительные проверки не нужны.

### Правильное решение:
1. **Получаем первый символ строки** — это всегда цифра возраста.
2. **Преобразуем символ в число**:
   - В ASCII коды цифр идут подряд: `'0'` → 48, `'1'` → 49 и т.д.
   - Если вычесть код `'0'` из кода цифры, получим само число:
     ```cpp
     '5' - '0' = 5  // потому что 53 (код '5') - 48 (код '0') = 5
     ```
3. **Возвращаем полученное число**.

### Исправленный код:
```cpp
#include <string>

int get_age(const std::string& she_said) {
    return she_said[0] - '0';  // Преобразуем первый символ в число
}
```

### Примеры работы:
- Ввод: `"5 years old"` → `'5' - '0' = 5` → Вывод: `5`
- Ввод: `"0 years old"` → `'0' - '0' = 0` → Вывод: `0`
- Ввод: `"9 years old"` → `'9' - '0' = 9` → Вывод: `9`

### Альтернативный вариант (с использованием `std::stoi`):
Если хочется использовать стандартные функции:
```cpp
#include <string>

int get_age(const std::string& she_said) {
    return std::stoi(she_said.substr(0, 1));  // Берём подстроку из первого символа
}
```
Но первый способ эффективнее, так как не создаёт временную подстроку.

### Итог:
Лучшее решение — просто вычесть `'0'` из первого символа строки. Это быстро, понятно и использует гарантии условия задачи.*/
